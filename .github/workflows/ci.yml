name: CI
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'ref'
        required: false
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_type: ["Release", "Debug"]
    env:
      CXX: "g++"
      BUILD_TYPE: ${{ matrix.build_type }}
      BUILD_DIR: "${{ github.workspace }}/code/build"
      MAKEFLAGS: "-j4"
      COLOR: "ON"
      CXXFLAGS: "-Werror"
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libopenmpi-dev
      - uses: actions/checkout@v2
      - name: Summary
        run: ./.github/workflows/summary.sh
      - name: Configure
        run: |
          mkdir "$BUILD_DIR"
          cd "$BUILD_DIR"
          cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS="${CXXFLAGS}" ..
      - name: Build
        run: |
          cd "$BUILD_DIR"
          make
      - name: Tests
        run: |
          cd "$BUILD_DIR"
          make check
      - name: Run Implementations
        run: |
          cd "$BUILD_DIR"
          impls=("allreduce" "allgather" "allreduce-butterfly" "allreduce-rabenseifner" "rabenseifner-gather" "allgather-async" "allreduce-ring", "bruck-async")
          for i in "${impls[@]}"; do
            echo -e "\e[33m${i}\e[0m"
            mpirun -np 1 ./main -c -n 1000 -m 2000 -i "$i"
            mpirun -np 2 ./main -c -n 1000 -m 2000 -i "$i"
          done
